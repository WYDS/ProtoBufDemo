// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SmobaData.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class MatchResultPB;
@class PlayerPB;
@class RoomInfoPB;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum RoomInfoPB_PVPRoomType

typedef GPB_ENUM(RoomInfoPB_PVPRoomType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RoomInfoPB_PVPRoomType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RoomInfoPB_PVPRoomType_PvproomType5V51 = 0,
  RoomInfoPB_PVPRoomType_PvproomType5V52 = 1,
  RoomInfoPB_PVPRoomType_PvproomType5V53 = 2,
  RoomInfoPB_PVPRoomType_PvproomType3V3 = 3,
  RoomInfoPB_PVPRoomType_PvproomType1V1 = 4,
};

GPBEnumDescriptor *RoomInfoPB_PVPRoomType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RoomInfoPB_PVPRoomType_IsValidValue(int32_t value);

#pragma mark - SmobaDataRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface SmobaDataRoot : GPBRootObject
@end

#pragma mark - RoomInfoPB

typedef GPB_ENUM(RoomInfoPB_FieldNumber) {
  RoomInfoPB_FieldNumber_RoomType = 1,
  RoomInfoPB_FieldNumber_RoomData = 2,
};

@interface RoomInfoPB : GPBMessage

/** 房间类型 */
@property(nonatomic, readwrite) RoomInfoPB_PVPRoomType roomType;

/** 房间标识 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomData;

@end

/**
 * Fetches the raw value of a @c RoomInfoPB's @c roomType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RoomInfoPB_RoomType_RawValue(RoomInfoPB *message);
/**
 * Sets the raw value of an @c RoomInfoPB's @c roomType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRoomInfoPB_RoomType_RawValue(RoomInfoPB *message, int32_t value);

#pragma mark - MatchResultPB

typedef GPB_ENUM(MatchResultPB_FieldNumber) {
  MatchResultPB_FieldNumber_MvpValue = 1,
  MatchResultPB_FieldNumber_TotalCoin = 2,
  MatchResultPB_FieldNumber_KillSoldier = 3,
  MatchResultPB_FieldNumber_KillMonster = 4,
  MatchResultPB_FieldNumber_Kill = 5,
  MatchResultPB_FieldNumber_Dead = 6,
  MatchResultPB_FieldNumber_Assist = 7,
  MatchResultPB_FieldNumber_DoubleKillNum = 8,
  MatchResultPB_FieldNumber_SoulLevel = 9,
  MatchResultPB_FieldNumber_EquipIdsArray = 10,
};

@interface MatchResultPB : GPBMessage

@property(nonatomic, readwrite) uint32_t mvpValue;

@property(nonatomic, readwrite) uint32_t totalCoin;

@property(nonatomic, readwrite) uint32_t killSoldier;

@property(nonatomic, readwrite) uint32_t killMonster;

@property(nonatomic, readwrite) uint32_t kill;

@property(nonatomic, readwrite) uint32_t dead;

@property(nonatomic, readwrite) uint32_t assist;

@property(nonatomic, readwrite) uint32_t doubleKillNum;

/** 英雄等级 */
@property(nonatomic, readwrite) uint32_t soulLevel;

/** 装备ID */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *equipIdsArray;
/** The number of items in @c equipIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger equipIdsArray_Count;

@end

#pragma mark - PlayerPB

typedef GPB_ENUM(PlayerPB_FieldNumber) {
  PlayerPB_FieldNumber_PlayerId = 1,
  PlayerPB_FieldNumber_Camp = 2,
  PlayerPB_FieldNumber_IsMaster = 3,
  PlayerPB_FieldNumber_IsReady = 4,
  PlayerPB_FieldNumber_HeroSkin = 5,
  PlayerPB_FieldNumber_HeroName = 6,
  PlayerPB_FieldNumber_Result = 7,
};

@interface PlayerPB : GPBMessage

/** 玩家ID */
@property(nonatomic, readwrite) uint64_t playerId;

/** 阵营 */
@property(nonatomic, readwrite) uint32_t camp;

/** 房主 */
@property(nonatomic, readwrite) BOOL isMaster;

/** 入座 */
@property(nonatomic, readwrite) BOOL isReady;

/** 玩家皮肤 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *heroSkin;

/** 玩家名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *heroName;

/** 比赛结果 */
@property(nonatomic, readwrite, strong, null_resettable) MatchResultPB *result;
/** Test to see if @c result has been set. */
@property(nonatomic, readwrite) BOOL hasResult;

@end

#pragma mark - SmobaData

typedef GPB_ENUM(SmobaData_FieldNumber) {
  SmobaData_FieldNumber_Magic = 1,
  SmobaData_FieldNumber_Flags = 2,
  SmobaData_FieldNumber_Req = 3,
  SmobaData_FieldNumber_AccountId = 4,
  SmobaData_FieldNumber_AccountInfo = 5,
  SmobaData_FieldNumber_LogicWorldId = 6,
  SmobaData_FieldNumber_WinCamp = 7,
  SmobaData_FieldNumber_RoomInfo = 8,
  SmobaData_FieldNumber_PlayerArray = 9,
};

@interface SmobaData : GPBMessage

@property(nonatomic, readwrite) uint32_t magic;

@property(nonatomic, readwrite) uint32_t flags;

@property(nonatomic, readwrite) uint32_t req;

/** 当前用户ID */
@property(nonatomic, readwrite) uint32_t accountId;

/** 授权信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountInfo;

/** 进入区服 */
@property(nonatomic, readwrite) uint32_t logicWorldId;

/** 获胜阵营 */
@property(nonatomic, readwrite) uint32_t winCamp;

/** 房间信息 */
@property(nonatomic, readwrite, strong, null_resettable) RoomInfoPB *roomInfo;
/** Test to see if @c roomInfo has been set. */
@property(nonatomic, readwrite) BOOL hasRoomInfo;

/** 玩家信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PlayerPB*> *playerArray;
/** The number of items in @c playerArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger playerArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
